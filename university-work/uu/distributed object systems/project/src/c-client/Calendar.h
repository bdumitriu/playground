/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Calendar_H
#define Calendar_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_interoperability_Date_defined)
#define _interoperability_Date_defined 1
typedef struct interoperability_Date_type interoperability_Date;
struct interoperability_Date_type {
CORBA_long second;
CORBA_long minute;
CORBA_long hour;
CORBA_long day;
CORBA_long month;
CORBA_long year;
};

#if !defined(TC_IMPL_TC_interoperability_Date_0)
#define TC_IMPL_TC_interoperability_Date_0 'C'
#define TC_IMPL_TC_interoperability_Date_1 'a'
#define TC_IMPL_TC_interoperability_Date_2 'l'
#define TC_IMPL_TC_interoperability_Date_3 'e'
#define TC_IMPL_TC_interoperability_Date_4 'n'
#define TC_IMPL_TC_interoperability_Date_5 'd'
#define TC_IMPL_TC_interoperability_Date_6 'a'
#define TC_IMPL_TC_interoperability_Date_7 'r'
#ifdef ORBIT_IDL_C_IMODULE_Calendar
static
#else
extern
#endif
struct CORBA_TypeCode_struct TC_interoperability_Date_struct;
#define TC_interoperability_Date ((CORBA_TypeCode)&TC_interoperability_Date_struct)
#endif
#define interoperability_Date__alloc() ((interoperability_Date *)ORBit_small_alloc (TC_interoperability_Date))
#define interoperability_Date__freekids(m,d) ORBit_small_freekids (TC_interoperability_Date,(m),(d))
#endif
#if !defined(_interoperability_Appointment_defined)
#define _interoperability_Appointment_defined 1
typedef struct interoperability_Appointment_type interoperability_Appointment;
struct interoperability_Appointment_type {
CORBA_long id;
interoperability_Date startDate;
interoperability_Date endDate;
CORBA_string location;
CORBA_string description;
CORBA_boolean isGroupAppointment;
};

#if !defined(TC_IMPL_TC_interoperability_Appointment_0)
#define TC_IMPL_TC_interoperability_Appointment_0 'C'
#define TC_IMPL_TC_interoperability_Appointment_1 'a'
#define TC_IMPL_TC_interoperability_Appointment_2 'l'
#define TC_IMPL_TC_interoperability_Appointment_3 'e'
#define TC_IMPL_TC_interoperability_Appointment_4 'n'
#define TC_IMPL_TC_interoperability_Appointment_5 'd'
#define TC_IMPL_TC_interoperability_Appointment_6 'a'
#define TC_IMPL_TC_interoperability_Appointment_7 'r'
#ifdef ORBIT_IDL_C_IMODULE_Calendar
static
#else
extern
#endif
struct CORBA_TypeCode_struct TC_interoperability_Appointment_struct;
#define TC_interoperability_Appointment ((CORBA_TypeCode)&TC_interoperability_Appointment_struct)
#endif
#define interoperability_Appointment__alloc() ((interoperability_Appointment *)ORBit_small_alloc (TC_interoperability_Appointment))
#define interoperability_Appointment__freekids(m,d) ORBit_small_freekids (TC_interoperability_Appointment,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_interoperability_Appointment)
#define ORBIT_DECL_CORBA_sequence_interoperability_Appointment 1
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_0 'C'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_1 'a'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_2 'l'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_3 'e'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_4 'n'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_5 'd'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_6 'a'
#define ORBIT_IMPL_CORBA_sequence_interoperability_Appointment_7 'r'
#if !defined(_CORBA_sequence_interoperability_Appointment_defined)
#define _CORBA_sequence_interoperability_Appointment_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; interoperability_Appointment* _buffer; CORBA_boolean _release; } CORBA_sequence_interoperability_Appointment;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_0)
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_0 'C'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_1 'a'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_2 'l'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_3 'e'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_4 'n'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_5 'd'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_6 'a'
#define TC_IMPL_TC_CORBA_sequence_interoperability_Appointment_7 'r'
#ifdef ORBIT_IDL_C_IMODULE_Calendar
static
#else
extern
#endif
struct CORBA_TypeCode_struct TC_CORBA_sequence_interoperability_Appointment_struct;
#define TC_CORBA_sequence_interoperability_Appointment ((CORBA_TypeCode)&TC_CORBA_sequence_interoperability_Appointment_struct)
#endif
#define CORBA_sequence_interoperability_Appointment__alloc() ((CORBA_sequence_interoperability_Appointment *)ORBit_small_alloc (TC_CORBA_sequence_interoperability_Appointment))
#define CORBA_sequence_interoperability_Appointment__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_interoperability_Appointment,(m),(d))
#define CORBA_sequence_interoperability_Appointment_allocbuf(l) ((interoperability_Appointment*)ORBit_small_allocbuf (TC_CORBA_sequence_interoperability_Appointment, (l)))
#define CORBA_sequence_interoperability_Appointment_allocbuf(l) ((interoperability_Appointment*)ORBit_small_allocbuf (TC_CORBA_sequence_interoperability_Appointment, (l)))
#endif
#if !defined(_interoperability_Appointments_defined)
#define _interoperability_Appointments_defined 1
typedef CORBA_sequence_interoperability_Appointment interoperability_Appointments;
#define interoperability_Appointments_marshal(x,y,z) CORBA_sequence_interoperability_Appointment_marshal((x),(y),(z))
#define interoperability_Appointments_demarshal(x,y,z,i) CORBA_sequence_interoperability_Appointment_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_interoperability_Appointments_0)
#define TC_IMPL_TC_interoperability_Appointments_0 'C'
#define TC_IMPL_TC_interoperability_Appointments_1 'a'
#define TC_IMPL_TC_interoperability_Appointments_2 'l'
#define TC_IMPL_TC_interoperability_Appointments_3 'e'
#define TC_IMPL_TC_interoperability_Appointments_4 'n'
#define TC_IMPL_TC_interoperability_Appointments_5 'd'
#define TC_IMPL_TC_interoperability_Appointments_6 'a'
#define TC_IMPL_TC_interoperability_Appointments_7 'r'
#ifdef ORBIT_IDL_C_IMODULE_Calendar
static
#else
extern
#endif
struct CORBA_TypeCode_struct TC_interoperability_Appointments_struct;
#define TC_interoperability_Appointments ((CORBA_TypeCode)&TC_interoperability_Appointments_struct)
#endif
#define interoperability_Appointments__alloc() ((interoperability_Appointments *)ORBit_small_alloc (TC_CORBA_sequence_interoperability_Appointment))
#define interoperability_Appointments__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_interoperability_Appointment,(m),(d))
#define interoperability_Appointments_allocbuf(l) ((interoperability_Appointment*)ORBit_small_allocbuf (TC_CORBA_sequence_interoperability_Appointment, (l)))
#endif
#if !defined(ORBIT_DECL_interoperability_Calendar) && !defined(_interoperability_Calendar_defined)
#define ORBIT_DECL_interoperability_Calendar 1
#define _interoperability_Calendar_defined 1
#define interoperability_Calendar__freekids CORBA_Object__freekids
typedef CORBA_Object interoperability_Calendar;
extern CORBA_unsigned_long interoperability_Calendar__classid;
#if !defined(TC_IMPL_TC_interoperability_Calendar_0)
#define TC_IMPL_TC_interoperability_Calendar_0 'C'
#define TC_IMPL_TC_interoperability_Calendar_1 'a'
#define TC_IMPL_TC_interoperability_Calendar_2 'l'
#define TC_IMPL_TC_interoperability_Calendar_3 'e'
#define TC_IMPL_TC_interoperability_Calendar_4 'n'
#define TC_IMPL_TC_interoperability_Calendar_5 'd'
#define TC_IMPL_TC_interoperability_Calendar_6 'a'
#define TC_IMPL_TC_interoperability_Calendar_7 'r'
#ifdef ORBIT_IDL_C_IMODULE_Calendar
static
#else
extern
#endif
struct CORBA_TypeCode_struct TC_interoperability_Calendar_struct;
#define TC_interoperability_Calendar ((CORBA_TypeCode)&TC_interoperability_Calendar_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_interoperability_Calendar
#define _defined_POA_interoperability_Calendar 1
typedef struct {
  void *_private;
interoperability_Appointments* (*getAppointments)(PortableServer_Servant _servant, const CORBA_char * loginName, const CORBA_char * password, CORBA_Environment *ev);
} POA_interoperability_Calendar__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_interoperability_Calendar__epv *interoperability_Calendar_epv;
} POA_interoperability_Calendar__vepv;
typedef struct {
  void *_private;
  POA_interoperability_Calendar__vepv *vepv;
} POA_interoperability_Calendar;
extern void POA_interoperability_Calendar__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_interoperability_Calendar__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_interoperability_Calendar */

/** skel prototypes **/
void _ORBIT_skel_small_interoperability_Calendar_getAppointments(POA_interoperability_Calendar *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, interoperability_Appointments* (*_impl_getAppointments)(PortableServer_Servant _servant, const CORBA_char * loginName, const CORBA_char * password, CORBA_Environment *ev));

/** stub prototypes **/
interoperability_Appointments* interoperability_Calendar_getAppointments(interoperability_Calendar _obj, const CORBA_char * loginName, const CORBA_char * password, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Calendar
static 
#else
extern 
#endif
ORBit_IInterface interoperability_Calendar__iinterface;
#define interoperability_Calendar_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_Calendar
static 
#else
extern 
#endif
ORBit_IMethod interoperability_Calendar__imethods[interoperability_Calendar_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
